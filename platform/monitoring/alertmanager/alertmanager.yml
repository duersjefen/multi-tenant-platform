# =============================================================================
# Alertmanager Configuration
# =============================================================================
# Routes alerts to appropriate notification channels
# Configure your notification receivers here (email, Slack, PagerDuty, etc.)
# =============================================================================

global:
  # Global settings
  resolve_timeout: 5m

  # Email configuration (optional)
  # smtp_smarthost: 'smtp.gmail.com:587'
  # smtp_from: 'alerts@filter-ical.de'
  # smtp_auth_username: 'your-email@gmail.com'
  # smtp_auth_password: 'your-app-password'

# Templates for notifications
templates:
  - '/etc/alertmanager/templates/*.tmpl'

# Alert routing
route:
  # Default receiver for all alerts
  receiver: 'default'

  # Group alerts by these labels
  group_by: ['alertname', 'cluster', 'service']

  # Wait time before sending first notification
  group_wait: 10s

  # Wait time before sending notifications about new alerts in the same group
  group_interval: 10s

  # Wait time before re-sending an alert notification
  repeat_interval: 12h

  # Route to specific receivers based on labels
  routes:
    # Critical infrastructure alerts (immediate notification)
    - match:
        severity: critical
      receiver: 'critical-alerts'
      group_wait: 0s
      repeat_interval: 5m

    # Warning alerts (less urgent)
    - match:
        severity: warning
      receiver: 'warning-alerts'
      group_wait: 30s
      repeat_interval: 3h

    # Staging environment alerts (low priority)
    - match:
        environment: staging
      receiver: 'staging-alerts'
      group_wait: 5m
      repeat_interval: 24h

# Alert receivers (notification channels)
receivers:
  # Default receiver (logs only)
  - name: 'default'
    # No configuration = alerts logged but not sent anywhere

  # Critical alerts - IMMEDIATE ACTION REQUIRED
  - name: 'critical-alerts'
    # Example: Send to email
    # email_configs:
    #   - to: 'ops-team@filter-ical.de'
    #     subject: 'üö® CRITICAL: {{ .GroupLabels.alertname }}'
    #     html: '{{ range .Alerts }}{{ .Annotations.description }}{{ end }}'

    # Example: Send to Slack
    # slack_configs:
    #   - api_url: 'https://hooks.slack.com/services/YOUR/WEBHOOK/URL'
    #     channel: '#alerts-critical'
    #     title: 'üö® {{ .GroupLabels.alertname }}'
    #     text: '{{ range .Alerts }}{{ .Annotations.description }}{{ end }}'
    #     send_resolved: true

    # Example: PagerDuty
    # pagerduty_configs:
    #   - service_key: 'your-pagerduty-service-key'

  # Warning alerts - Non-critical issues
  - name: 'warning-alerts'
    # email_configs:
    #   - to: 'dev-team@filter-ical.de'
    #     subject: '‚ö†Ô∏è  WARNING: {{ .GroupLabels.alertname }}'

  # Staging alerts - Low priority
  - name: 'staging-alerts'
    # email_configs:
    #   - to: 'dev-team@filter-ical.de'
    #     subject: '‚ÑπÔ∏è  Staging: {{ .GroupLabels.alertname }}'

# Inhibition rules (prevent certain alerts from firing when others are active)
inhibit_rules:
  # Don't alert about apps being down if the entire server is down
  - source_match:
      severity: 'critical'
      alertname: 'ServerDown'
    target_match:
      severity: 'critical'
    equal: ['instance']

  # Don't alert about high error rates if the service is already down
  - source_match:
      alertname: '.*Down'
    target_match:
      severity: 'warning'
    equal: ['project', 'environment']