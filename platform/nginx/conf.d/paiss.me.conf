# =============================================================================
# PAISS - Pragmatic AI Software Solutions - Nginx Configuration
# =============================================================================
# AUTO-GENERATED from config/projects.yml
# DO NOT EDIT MANUALLY - Use ./lib/generate-nginx-configs.py to regenerate
# =============================================================================

# =============================================================================
# HTTP → HTTPS REDIRECT
# =============================================================================
server {
    listen 80;
    server_name paiss.me www.paiss.me;

    # ACME challenge for SSL renewal
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# =============================================================================
# PAISS - Pragmatic AI Software Solutions - PRODUCTION
# =============================================================================
server {
    listen 443 ssl;
    listen 443 quic;  # HTTP/3 support
    http2 on;
    server_name paiss.me www.paiss.me;

    # SSL certificates
    ssl_certificate /etc/letsencrypt/live/paiss.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/paiss.me/privkey.pem;

    # Include security headers
    include /etc/nginx/includes/security-headers.conf;

    # Logs
    access_log /var/log/nginx/paiss-production.access.log detailed;
    error_log /var/log/nginx/paiss-production.error.log warn;

    # ==========================================================================
    # FRONTEND ROUTES
    # ==========================================================================
    location / {
        # Rate limiting
        limit_req zone=general burst=50 nodelay;

        # Dynamic frontend resolution
        set $frontend_host "paiss-web";
        set $frontend_port "80";
        proxy_pass http://$frontend_host:$frontend_port;

        # Include standard proxy headers
        include /etc/nginx/includes/proxy-headers.conf;

        # SPA fallback
        proxy_intercept_errors on;
        error_page 404 = @frontend_fallback;
    }

    # SPA fallback - serve index.html for client-side routes
    location @frontend_fallback {
        set $frontend_host "paiss-web";
        set $frontend_port "80";
        proxy_pass http://$frontend_host:$frontend_port/index.html;
        include /etc/nginx/includes/proxy-headers.conf;
    }

    # ==========================================================================
    # STATIC ASSETS (with caching)
    # ==========================================================================
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        set $frontend_host "paiss-web";
        set $frontend_port "80";
        proxy_pass http://$frontend_host:$frontend_port;
        include /etc/nginx/includes/proxy-headers.conf;

        # Cache static assets
        proxy_cache_valid 200 7d;
        add_header Cache-Control "public, max-age=604800, immutable";
    }
}

# =============================================================================
# HTTP → HTTPS REDIRECT
# =============================================================================
server {
    listen 80;
    server_name staging.paiss.me;

    # ACME challenge for SSL renewal
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# =============================================================================
# PAISS - Pragmatic AI Software Solutions - STAGING
# =============================================================================
server {
    listen 443 ssl;
    listen 443 quic;  # HTTP/3 support
    http2 on;
    server_name staging.paiss.me;

    # SSL certificates
    ssl_certificate /etc/letsencrypt/live/staging.paiss.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/staging.paiss.me/privkey.pem;

    # Include security headers
    include /etc/nginx/includes/security-headers.conf;

    # Logs
    access_log /var/log/nginx/paiss-staging.access.log detailed;
    error_log /var/log/nginx/paiss-staging.error.log warn;

    # ==========================================================================
    # FRONTEND ROUTES
    # ==========================================================================
    location / {
        # Rate limiting
        limit_req zone=general burst=50 nodelay;

        # Dynamic frontend resolution
        set $frontend_host "paiss-web-staging";
        set $frontend_port "80";
        proxy_pass http://$frontend_host:$frontend_port;

        # Include standard proxy headers
        include /etc/nginx/includes/proxy-headers.conf;

        # SPA fallback
        proxy_intercept_errors on;
        error_page 404 = @frontend_fallback;
    }

    # SPA fallback - serve index.html for client-side routes
    location @frontend_fallback {
        set $frontend_host "paiss-web-staging";
        set $frontend_port "80";
        proxy_pass http://$frontend_host:$frontend_port/index.html;
        include /etc/nginx/includes/proxy-headers.conf;
    }

    # ==========================================================================
    # STATIC ASSETS (with caching)
    # ==========================================================================
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        set $frontend_host "paiss-web-staging";
        set $frontend_port "80";
        proxy_pass http://$frontend_host:$frontend_port;
        include /etc/nginx/includes/proxy-headers.conf;

        # Cache static assets
        proxy_cache_valid 200 7d;
        add_header Cache-Control "public, max-age=604800, immutable";
    }
}
