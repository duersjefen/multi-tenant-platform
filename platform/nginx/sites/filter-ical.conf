# =============================================================================
# Filter-iCal - Calendar Filtering & Viewing Platform
# =============================================================================
# Vue 3 frontend + Python FastAPI backend
# Production: filter-ical.de, www.filter-ical.de
# Staging: staging.filter-ical.de
# =============================================================================

# =============================================================================
# HTTP → HTTPS REDIRECT (Production)
# =============================================================================
server {
    listen 80;
    server_name filter-ical.de www.filter-ical.de;

    # ACME challenge for SSL renewal
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# =============================================================================
# Filter-iCal - PRODUCTION
# =============================================================================
server {
    listen 443 ssl;
    listen 443 quic reuseport;
    http2 on;
    server_name filter-ical.de www.filter-ical.de;

    # SSL certificates (multi-domain cert covers all sites)
    ssl_certificate /etc/letsencrypt/live/gabs-massage.de/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/gabs-massage.de/privkey.pem;

    # Include security headers
    include /etc/nginx/includes/security-headers.conf;

    # Logs
    access_log /var/log/nginx/filter-ical-production.access.log detailed;
    error_log /var/log/nginx/filter-ical-production.error.log warn;

    # Docker DNS resolver (defers DNS resolution to request time)
    resolver 127.0.0.11 valid=10s;

    # Cache zone for API responses (KISS: simple, short TTL)
    proxy_cache_path /var/cache/nginx/filter-ical-production
        levels=1:2
        keys_zone=filter_ical_cache_prod:10m
        max_size=100m
        inactive=60m
        use_temp_path=off;

    # Domain listing (cache longer - rarely changes)
    location = /api/domains {
        limit_req zone=api burst=20 nodelay;

        set $backend filter-ical-backend-production:3000;
        proxy_pass http://$backend;
        include /etc/nginx/includes/proxy-headers.conf;

        # Cache for 10 minutes
        proxy_cache filter_ical_cache_prod;
        proxy_cache_methods GET;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        proxy_cache_valid 200 10m;
        proxy_cache_valid 404 502 503 1s;

        # Debug header to see cache status
        add_header X-Cache-Status $upstream_cache_status always;

        # Bypass cache if user has auth cookies
        proxy_cache_bypass $http_cookie;
        proxy_no_cache $http_cookie;
    }

    # Domain events (cache briefly - may update frequently)
    location ~ ^/api/domains/[^/]+/events$ {
        limit_req zone=api burst=20 nodelay;

        set $backend filter-ical-backend-production:3000;
        proxy_pass http://$backend;
        include /etc/nginx/includes/proxy-headers.conf;

        # Cache for 5 minutes
        proxy_cache filter_ical_cache_prod;
        proxy_cache_methods GET;
        proxy_cache_key "$scheme$request_method$host$request_uri$args";
        proxy_cache_valid 200 5m;
        proxy_cache_valid 404 502 503 1s;

        # Debug header to see cache status
        add_header X-Cache-Status $upstream_cache_status always;

        # Bypass cache if user has auth cookies
        proxy_cache_bypass $http_cookie;
        proxy_no_cache $http_cookie;
    }

    # Never cache auth endpoints
    location ~ ^/api/domains/[^/]+/auth/ {
        limit_req zone=api burst=20 nodelay;

        set $backend filter-ical-backend-production:3000;
        proxy_pass http://$backend;
        include /etc/nginx/includes/proxy-headers.conf;

        # Explicitly disable caching
        proxy_cache off;
    }

    # Backend routes (API) - default for all other API paths
    location ~ ^/(api|domains|filter|subscribe|ical) {
        limit_req zone=api burst=20 nodelay;

        set $backend filter-ical-backend-production:3000;
        proxy_pass http://$backend;
        include /etc/nginx/includes/proxy-headers.conf;
    }

    # Frontend routes
    location / {
        limit_req zone=api burst=50 nodelay;

        set $frontend filter-ical-frontend-production:80;
        proxy_pass http://$frontend;
        include /etc/nginx/includes/proxy-headers.conf;

        # SPA fallback
        proxy_intercept_errors on;
        error_page 404 = @frontend_fallback;
    }

    # SPA fallback
    location @frontend_fallback {
        set $frontend filter-ical-frontend-production:80;
        proxy_pass http://$frontend;
        include /etc/nginx/includes/proxy-headers.conf;
    }

    # Static assets (with caching)
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        set $frontend filter-ical-frontend-production:80;
        proxy_pass http://$frontend;
        include /etc/nginx/includes/proxy-headers.conf;

        proxy_cache_valid 200 7d;
        add_header Cache-Control "public, max-age=604800, immutable";
    }
}

# =============================================================================
# HTTP → HTTPS REDIRECT (Staging)
# =============================================================================
server {
    listen 80;
    server_name staging.filter-ical.de;

    # ACME challenge for SSL renewal
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# =============================================================================
# Filter-iCal - STAGING
# =============================================================================
server {
    listen 443 ssl;
    listen 443 quic;
    http2 on;
    server_name staging.filter-ical.de;

    # SSL certificates (multi-domain cert covers all sites)
    ssl_certificate /etc/letsencrypt/live/gabs-massage.de/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/gabs-massage.de/privkey.pem;

    # Include security headers
    include /etc/nginx/includes/security-headers.conf;

    # Logs
    access_log /var/log/nginx/filter-ical-staging.access.log detailed;
    error_log /var/log/nginx/filter-ical-staging.error.log warn;

    # Docker DNS resolver (defers DNS resolution to request time)
    resolver 127.0.0.11 valid=10s;

    # Cache zone for API responses (KISS: simple, short TTL)
    proxy_cache_path /var/cache/nginx/filter-ical-staging
        levels=1:2
        keys_zone=filter_ical_cache_staging:10m
        max_size=100m
        inactive=60m
        use_temp_path=off;

    # Domain listing (cache longer - rarely changes)
    location = /api/domains {
        limit_req zone=api burst=20 nodelay;

        set $backend filter-ical-backend-staging:3000;
        proxy_pass http://$backend;
        include /etc/nginx/includes/proxy-headers.conf;

        # Cache for 10 minutes
        proxy_cache filter_ical_cache_staging;
        proxy_cache_methods GET;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        proxy_cache_valid 200 10m;
        proxy_cache_valid 404 502 503 1s;

        # Debug header to see cache status
        add_header X-Cache-Status $upstream_cache_status always;

        # Bypass cache if user has auth cookies
        proxy_cache_bypass $http_cookie;
        proxy_no_cache $http_cookie;
    }

    # Domain events (cache briefly - may update frequently)
    location ~ ^/api/domains/[^/]+/events$ {
        limit_req zone=api burst=20 nodelay;

        set $backend filter-ical-backend-staging:3000;
        proxy_pass http://$backend;
        include /etc/nginx/includes/proxy-headers.conf;

        # Cache for 5 minutes
        proxy_cache filter_ical_cache_staging;
        proxy_cache_methods GET;
        proxy_cache_key "$scheme$request_method$host$request_uri$args";
        proxy_cache_valid 200 5m;
        proxy_cache_valid 404 502 503 1s;

        # Debug header to see cache status
        add_header X-Cache-Status $upstream_cache_status always;

        # Bypass cache if user has auth cookies
        proxy_cache_bypass $http_cookie;
        proxy_no_cache $http_cookie;
    }

    # Never cache auth endpoints
    location ~ ^/api/domains/[^/]+/auth/ {
        limit_req zone=api burst=20 nodelay;

        set $backend filter-ical-backend-staging:3000;
        proxy_pass http://$backend;
        include /etc/nginx/includes/proxy-headers.conf;

        # Explicitly disable caching
        proxy_cache off;
    }

    # Backend routes (API) - default for all other API paths
    location ~ ^/(api|domains|filter|subscribe|ical) {
        limit_req zone=api burst=20 nodelay;

        set $backend filter-ical-backend-staging:3000;
        proxy_pass http://$backend;
        include /etc/nginx/includes/proxy-headers.conf;
    }

    # Frontend routes
    location / {
        limit_req zone=api burst=50 nodelay;

        set $frontend filter-ical-frontend-staging:80;
        proxy_pass http://$frontend;
        include /etc/nginx/includes/proxy-headers.conf;

        # SPA fallback
        proxy_intercept_errors on;
        error_page 404 = @frontend_fallback;
    }

    # SPA fallback
    location @frontend_fallback {
        set $frontend filter-ical-frontend-staging:80;
        proxy_pass http://$frontend;
        include /etc/nginx/includes/proxy-headers.conf;
    }

    # Static assets (with caching)
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        set $frontend filter-ical-frontend-staging:80;
        proxy_pass http://$frontend;
        include /etc/nginx/includes/proxy-headers.conf;

        proxy_cache_valid 200 7d;
        add_header Cache-Control "public, max-age=604800, immutable";
    }
}
