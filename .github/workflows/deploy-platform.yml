name: Deploy Platform to Production

on:
  workflow_dispatch:
    inputs:
      component:
        description: 'Component to deploy'
        required: true
        type: choice
        options:
          - nginx
          - monitoring
          - certbot
          - all
      skip_backup:
        description: 'Skip backup creation'
        required: false
        type: boolean
        default: false

jobs:
  test:
    name: Pre-Deployment Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Start nginx for testing
        run: |
          docker compose -f platform/docker-compose.platform.yml up -d nginx
          sleep 5

      - name: Run platform tests
        run: |
          chmod +x lib/test-platform.sh
          ./lib/test-platform.sh

      - name: Test nginx syntax
        run: |
          docker exec platform-nginx nginx -t

      - name: Cleanup
        if: always()
        run: |
          docker compose -f platform/docker-compose.platform.yml down

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: production
      url: https://filter-ical.de

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Deploy platform component
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'ENDSSH'
            cd /opt/multi-tenant-platform

            # Pull latest changes
            git fetch origin
            git reset --hard origin/main

            # Make scripts executable
            chmod +x lib/deploy-platform.sh
            chmod +x lib/validate-all-projects.sh

            # Deploy component
            BACKUP_FLAG=""
            if [ "${{ inputs.skip_backup }}" = "true" ]; then
              BACKUP_FLAG="--skip-backup"
            fi

            ./lib/deploy-platform.sh ${{ inputs.component }} $BACKUP_FLAG
          ENDSSH

      - name: Validate all projects
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'ENDSSH'
            cd /opt/multi-tenant-platform
            ./lib/validate-all-projects.sh --verbose
          ENDSSH

      - name: Verify HTTP/3 (if nginx deployed)
        if: inputs.component == 'nginx' || inputs.component == 'all'
        run: |
          # Test HTTP/3 from CI
          curl --http3 -I https://filter-ical.de || echo "Note: HTTP/3 test requires curl with HTTP/3 support"

          # Test HTTPS still works
          curl -I https://filter-ical.de
          curl -I https://paiss.me

      - name: Send notification
        if: always()
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            echo "✅ Platform deployment successful: ${{ inputs.component }}"
          else
            echo "❌ Platform deployment failed: ${{ inputs.component }}"
          fi
